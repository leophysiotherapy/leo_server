// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum roles {
  patient
  admin
  staff
}

enum status {
  upcoming
  done
  finished
}

enum platform {
  online
  f2f
}

enum notifStatus {
  read
  unread
}

model user {
  userID       String         @id @default(cuid())
  email        String         @unique
  password     String
  role         roles
  verified     Boolean        @default(false)
  creatdAt     DateTime       @default(now()) @db.Timestamp()
  updateAt     DateTime       @default(now()) @db.Timestamp()
  profile      profile?
  blog         blogs[]
  faqs         faqs[]
  equipment    equipment[]
  prescription presciption[]
  feedback     feedback[]
  appointment  appointment[]
  notification notification[]
}

model notification {
  notificationID String      @id @default(cuid())
  title          String
  status         notifStatus
  createdAt      DateTime    @default(now()) @db.Timestamp()
  updatedAt      DateTime    @default(now()) @db.Timestamp()
  user           user[]
}

model services {
  serviceID   String        @id @default(cuid())
  service     String
  description String
  price       Float
  createdAt   DateTime      @default(now()) @db.Timestamp()
  updatedAt   DateTime      @default(now()) @db.Timestamp()
  appointment appointment[]
}

model appointment {
  appointmentID String     @id @default(cuid())
  date          DateTime   @db.Date
  time          DateTime   @db.Time(6)
  services      services[]
  platform      platform
  link          String?
  status        status     @default(upcoming)
  createdAt     DateTime   @default(now()) @db.Timestamp()
  updatedAt     DateTime   @default(now()) @db.Timestamp()
  user          user[]
}

model equipment {
  equipmentID String   @id @default(cuid())
  name        String
  description String
  category    String
  quantity    Int
  expireDate  DateTime @db.Date
  creatdAt    DateTime @default(now()) @db.Timestamp()
  updateAt    DateTime @default(now()) @db.Timestamp()
  user        user[]
}

model blogs {
  blogsID   String   @id @default(cuid())
  title     String
  content   String
  createdAt DateTime @default(now()) @db.Timestamp()
  updatedAt DateTime @default(now()) @db.Timestamp()
  draft     Boolean  @default(true)
  user      user[]
}

model faqs {
  faqsID   String   @id @default(cuid())
  faqs     String
  answer   String
  creatdAt DateTime @default(now()) @db.Timestamp()
  updateAt DateTime @default(now()) @db.Timestamp()
  user     user[]
}

model avatar {
  avatarID  String   @id @default(cuid())
  avatar    String
  creatdAt  DateTime @default(now()) @db.Timestamp()
  updateAt  DateTime @default(now()) @db.Timestamp()
  profile   profile? @relation(fields: [profileID], references: [profileID])
  profileID String?  @unique
}

model profile {
  profileID      String  @id @default(cuid())
  firstname      String
  lastname       String
  phone          String
  designation    String?
  expertise      String?
  emergencyPhone String?
  avatar         avatar?
  user           user?   @relation(fields: [userID], references: [userID])
  userID         String? @unique
}

model presciption {
  prescriptionID String   @id @default(cuid())
  prescription   String
  dose           Int
  amount         Int
  advice         String
  createdAt      DateTime @default(now()) @db.Timestamp()
  updatedAt      DateTime @default(now()) @db.Timestamp()
  patinet        user?    @relation(fields: [userID], references: [userID])
  userID         String?  @unique
}

model form {
  formID   String   @id @default(cuid())
  question String
  answer   String
  creatdAt DateTime @default(now()) @db.Timestamp()
  updateAt DateTime @default(now()) @db.Timestamp()
}

model feedback {
  feedbackID String   @id @default(cuid())
  feedback   String
  creatdAt   DateTime @default(now()) @db.Timestamp()
  updatedAt  DateTime @default(now()) @db.Timestamp()
  user       user[]
}
